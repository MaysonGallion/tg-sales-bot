import database.db as db  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –º–æ–¥—É–ª—å db.py
from database.models import CREATE_PRODUCTS_TABLE
from utils.logger import logger


# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã products
async def create_products_table():
    async with db.pool.acquire() as conn:  # –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî db.pool
        await conn.execute(CREATE_PRODUCTS_TABLE)
        logger.info("üì¶ –¢–∞–±–ª–∏—Ü–∞ products —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –≥–æ—Ä–æ–¥—É (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω –≥–æ—Ä–æ–¥)
async def get_products(category: str, city: str = None):
    async with db.pool.acquire() as conn:
        if city:
            query = """
                SELECT * FROM products 
                WHERE active = TRUE 
                AND LOWER(category) = LOWER($1)
                AND (city ILIKE $2 OR city = 'Wszystkie')
            """
            return await conn.fetch(query, category, city)
        else:
            query = """
                SELECT * FROM products 
                WHERE active = TRUE 
                AND LOWER(category) = LOWER($1)
            """
            return await conn.fetch(query, category)



async def get_product_by_id(product_id: int):
    async with db.pool.acquire() as conn:
        query = """
            SELECT * FROM products 
            WHERE id = $1 AND active = TRUE
        """
        return await conn.fetchrow(query, product_id)
